/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cobra.porte;

import cobra.Empreinte;
import cobra.Personne;
import cobra.borne.BorneFrame;
import controleAcces.annuairePackage.personneInexistanteException;
import controleAcces.autorisateurPackage.autorisationRefuseeException;
import controleAcces.coffreFortPackage.empreinteInconnueException;
import controleAcces.sessionExpireeException;
import controleAcces.sessionInvalidException;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author matt
 */
public class PorteFrame extends javax.swing.JFrame {

  private Porte porte;

  private enum ETAT {

	NONCONNECTE, CHANGEMDP, AJOUTEMPREINTE, MODIFEMPREINTE
  };
  private ETAT etat;

  private enum ETATM {

	ERROR, INFOR
  };
  private ETATM etatMessage;

  private String message;

  private boolean aMessage;
  
  /**
   * Creates new form PorteFrame
   */
  public PorteFrame(Porte porte) {
	initComponents();
	init();
	this.setSize(420, 300);
	//this.setTitle("Porte " + porte.getZone());
  }

  private void init(){
	//titreLabel.setText("Porte " + porte.getZone());
	
	empreinteField.setText("");
    empreinteField.setSize(70, 78);
    empreinteField.setFocusable(true);
    empreinteField.requestFocus();
	
	photoField.setText("");
    photoField.setSize(70, 78);
    photoField.setFocusable(true);
	
	entrerButton.setText("Entrer");
	entrerButton.setEnabled(true);
	sortirButton.setText("Sortir");
	sortirButton.setEnabled(true);
	
	infoLabel.setText("");
	updateMessage();
  }

  public PorteFrame() {
	initComponents();
  }
  
  private void setMessage(ETATM em, String m) {
	etatMessage = em;
	message = m;
	aMessage = true;
  }

  private void updateMessage() {
	if (aMessage) {
	  infoLabel.setText(message);
	  if (etatMessage == ETATM.ERROR) {
		infoLabel.setForeground(Color.red);
	  }
	  if (etatMessage == ETATM.INFOR) {
		infoLabel.setForeground(Color.blue);
	  }
	} else {
	  infoLabel.setText("");
	}
	aMessage = false;
  }

  private boolean checkParam(){
	return ! (empreinteField.getText().isEmpty() || photoField.getText().isEmpty());
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    titreLabel = new javax.swing.JLabel();
    infoLabel = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    photoField = new javax.swing.JTextField();
    empreinteField = new javax.swing.JTextField();
    entrerButton = new javax.swing.JButton();
    sortirButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    titreLabel.setText("jLabel1");

    infoLabel.setText("jLabel2");

    jLabel1.setText("Empreinte");

    jLabel2.setText("Photo");

    photoField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    photoField.setText("jTextField1");

    empreinteField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    empreinteField.setText("jTextField1");

    entrerButton.setText("Entrer");
    entrerButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        entrerButtonActionPerformed(evt);
      }
    });

    sortirButton.setText("Sortir");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titreLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(infoLabel))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel1)
                .addGap(69, 69, 69)
                .addComponent(jLabel2))
              .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(empreinteField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(photoField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(entrerButton)
                  .addComponent(sortirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(0, 27, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(titreLabel)
          .addComponent(infoLabel))
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(37, 37, 37)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel1)
              .addComponent(jLabel2))
            .addGap(41, 41, 41)
            .addComponent(entrerButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(sortirButton))
          .addGroup(layout.createSequentialGroup()
            .addGap(81, 81, 81)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(empreinteField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(photoField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap(68, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void entrerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrerButtonActionPerformed
    if(checkParam()){
	  Empreinte empreinte = new Empreinte(empreinteField.getText());
	  String photo = photoField.getText();
	  try {
		Personne personne = porte.entrer(empreinte, photo);
		setMessage(ETATM.INFOR, "Bienvenue " + personne.getPrenomNom());
		
	  } catch (empreinteInconnueException ex) {
		setMessage(ETATM.ERROR, "Empreinte inconnue");
	  } catch (sessionInvalidException ex) {
		setMessage(ETATM.ERROR, "Erreur interne (session invalide)");
	  } catch (sessionExpireeException ex) {
		setMessage(ETATM.ERROR, "Erreur interne (session expirée)");
	  } catch (personneInexistanteException ex) {
		setMessage(ETATM.ERROR, "Erreur interne (matricule ?)");
	  } catch (autorisationRefuseeException ex) {
		setMessage(ETATM.ERROR, "Autorisation refusée.");
	  } catch (PhotoErroneeException ex) {
		setMessage(ETATM.ERROR, "Photo et empreinte ne correspondent pas.");
	  }
	}
	else{
	  setMessage(ETATM.ERROR, "Posez votre doigt et ne bougez pas la tête.");
	}
  }//GEN-LAST:event_entrerButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
	/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	  for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		  javax.swing.UIManager.setLookAndFeel(info.getClassName());
		  break;
		}
	  }
	} catch (ClassNotFoundException ex) {
	  java.util.logging.Logger.getLogger(PorteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	  java.util.logging.Logger.getLogger(PorteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	  java.util.logging.Logger.getLogger(PorteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	  java.util.logging.Logger.getLogger(PorteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
        //</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	  @Override
	  public void run() {
		new PorteFrame(null).setVisible(true);
	  }
	});
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField empreinteField;
  private javax.swing.JButton entrerButton;
  private javax.swing.JLabel infoLabel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JTextField photoField;
  private javax.swing.JButton sortirButton;
  private javax.swing.JLabel titreLabel;
  // End of variables declaration//GEN-END:variables
}
