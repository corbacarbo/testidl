package testidl.borne;

import controleAcces.annuairePackage.loginIncorrectException;
import controleAcces.annuairePackage.mdpIdentiqueException;
import controleAcces.annuairePackage.personneInexistanteException;
import controleAcces.sessionExpireeException;
import controleAcces.sessionInvalidException;
import java.awt.Color;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import testidl.Empreinte;

public class BorneFrame extends javax.swing.JFrame {

  private Borne borne;

  private enum ETAT {
    NONCONNECTE, CHANGEMDP, EMPREINTE
  };
  private ETAT etat;

  private String message;
  private boolean error;
  private boolean info;

  public BorneFrame(Borne borne) throws HeadlessException {
    this.borne = borne;
    initComponents();
    this.setSize(500, 300);
    activateNonConnecte();
  }

  private void updateMessage() {
    if (info || error) {
      infoLabel.setText(message);
      if (error) {
        infoLabel.setForeground(Color.red);
      }
      if (info) {
        infoLabel.setForeground(Color.blue);
      }
    } else {
      infoLabel.setText("");
    }
    error = false;
    info = false;
  }

  private void activateNonConnecte() {
    etat = ETAT.NONCONNECTE;
    titreLabel.setText("LOGIN");
    okButton.setText("Connexion");
    okButton.setEnabled(true);
    cancelButton.setText("Annuler");
    cancelButton.setEnabled(true);
    updateMessage();

    loginPanel.initState();
    loginPanel.setVisible(true);
    mdpPanel.setVisible(false);
    empreintePanel.setVisible(false);
  }

  private void activateChangeMdp() {
    etat = ETAT.CHANGEMDP;
    titreLabel.setText("Changement mot de passe");
    okButton.setText("Changer");
    okButton.setEnabled(true);
    cancelButton.setText("Annuler");
    cancelButton.setEnabled(true);
    updateMessage();

    mdpPanel.initState();
    loginPanel.setVisible(false);
    mdpPanel.setVisible(true);
    empreintePanel.setVisible(false);
  }

  private void activateEmpreinte() {
    etat = ETAT.EMPREINTE;
    titreLabel.setText("Empreinte");
    okButton.setText("Valider");
    okButton.setEnabled(true);
    cancelButton.setText("Annuler");
    cancelButton.setEnabled(true);
    updateMessage();

    empreintePanel.initState();
    loginPanel.setVisible(false);
    mdpPanel.setVisible(false);
    empreintePanel.setVisible(true);
  }

  /**
   * Creates new form BorneFrame
   */
  public BorneFrame() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();
    titreLabel = new javax.swing.JLabel();
    infoLabel = new javax.swing.JLabel();
    loginPanel = new testidl.borne.LoginPanel();
    mdpPanel = new testidl.borne.MdpPanel();
    empreintePanel = new testidl.borne.EmpreintePanel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    okButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    okButton.setText("jButton1");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setText("jButton2");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    titreLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    titreLabel.setText("jLabel1");
    titreLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

    infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
    infoLabel.setText("jLabel1");
    infoLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
              .addContainerGap()
              .addComponent(cancelButton)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(okButton))
            .addGroup(layout.createSequentialGroup()
              .addGap(43, 43, 43)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(empreintePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mdpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(56, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(titreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(mdpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(empreintePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(33, 33, 33)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    switch (etat) {
      case NONCONNECTE:
        try {
          borne.authentifier(loginPanel.getMatricule(), loginPanel.getMdp());
          if (borne.premiereConnexion()) {
            message = "Veuillez changer votre mot de passe.";
            info = true;
            activateChangeMdp();
          } else {
            activateEmpreinte();
          }
        } catch (loginIncorrectException ex) {
          message = ex.message;
          error = true;
          activateNonConnecte();
        } catch (personneInexistanteException ex) {
          message = ex.message;
          error = true;
          activateNonConnecte();
        }
        break;

      case CHANGEMDP:
        String mdp1 = mdpPanel.getMdp1();
        String mdp2 = mdpPanel.getMdp2();

        if (mdp1.equals(mdp2)) {
          try {
            borne.changeMdp(mdp1);
            message = "Mot de passe changé";
            info = true;
            activateEmpreinte();
          } catch (mdpIdentiqueException ex) {
            message = ex.message;
            error = true;
          } catch (sessionInvalidException ex) {
            Logger.getLogger(BorneFrame.class.getName()).log(Level.SEVERE, null, ex);
          } catch (sessionExpireeException ex) {
            Logger.getLogger(BorneFrame.class.getName()).log(Level.SEVERE, null, ex);
          } catch (personneInexistanteException ex) {
            Logger.getLogger(BorneFrame.class.getName()).log(Level.SEVERE, null, ex);
          }

        } else {
          message = "Attention !";
          error = true;
          activateChangeMdp();
        }
        break;

      case EMPREINTE:
        if (empreintePanel.getEmpreinte().isEmpty()) {
          message = "Posez votre doigt";
          error = true;
          activateEmpreinte();
        } else {
          Empreinte empreinte = new Empreinte(empreintePanel.getEmpreinte());
//        borne.empreinte(empreinte);
          message = "Empreinte changée";
          info = true;
          activateNonConnecte();
        }
        break;
      default:
        throw new RuntimeException("Transition d'état impossible");
    }
  }//GEN-LAST:event_okButtonActionPerformed

  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    switch (etat) {
      case NONCONNECTE:
        this.dispose();
        break;
      case CHANGEMDP:
        message = "Opération annulée";
        info = true;
        activateNonConnecte();
        break;
      case EMPREINTE:
        message = "Opération annulée";
        info = true;
        activateNonConnecte();
        break;
      default:
        throw new RuntimeException("Transition d'état impossible");
    }
  }//GEN-LAST:event_cancelButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(BorneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(BorneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(BorneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(BorneFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new BorneFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton cancelButton;
  private testidl.borne.EmpreintePanel empreintePanel;
  private javax.swing.JLabel infoLabel;
  private testidl.borne.LoginPanel loginPanel;
  private testidl.borne.MdpPanel mdpPanel;
  private javax.swing.JButton okButton;
  private javax.swing.JLabel titreLabel;
  // End of variables declaration//GEN-END:variables
}
